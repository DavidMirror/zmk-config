#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape-er {
            bindings = <&kp ESCAPE>;
            key-positions = <10 11>;
        };

        IO-apostrophe {
            bindings = <&kp APOSTROPHE>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp F        &kp P             &kp B        &kp J        &kp L            &kp U           &kp Y            &kp SEMICOLON
&mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp K        &mt RSHIFT N     &mt RCTRL E     &mt RIGHT_ALT I  &mt RIGHT_GUI O
&mt LSHFT Z     &mt LCTRL X     &mt LGUI C   &mt LALT D        &kp V        &kp M        &mt RALT H       &mt RGUI COMMA  &mt RCTRL DOT    &mt RSHFT FSLH
                                &lt 1 ESC    &lt 2 TAB         &lt 3 ENTER  &lt 4 SPACE  &lt 5 BACKSPACE  &lt 6 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            bindings = <
&trans        &trans        &trans     &sys_reset      &bootloader  &bootloader        &sys_reset      &trans        &trans        &trans
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans       &ext_power EP_TOG  &kp C_PREVIOUS  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
&trans        &trans        &trans     &trans          &trans       &out OUT_TOG       &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                            &trans     &trans          &trans       &kp C_PP           &kp C_MUTE      &kp C_STOP
            >;
        };


        nav_layer {
            bindings = <
&bt BT_CLR  &bootloader  &kp PG_UP  &kp PG_DN  &kp PSCRN        &trans        &trans    &trans         &trans     &trans
&trans      &trans       &trans     &trans     &kp PAUSE_BREAK  &kp CAPSLOCK  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT
&trans      &trans       &kp INS    &kp DEL    &kp SLCK         &trans        &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END
                         &trans     &trans     &trans           &trans        &trans    &trans
            >;
        };

        sym_layer {
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND    &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE  &bootloader  &trans           &trans     &trans         &trans
&kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS         &trans       &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI
&kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE         &trans       &trans           &trans     &trans         &trans
                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE   &trans       &trans           &trans
            >;
        };

        num_layer {
            bindings = <
&kp N0         &kp N7  &kp N8   &kp N9        &sys_reset  &bootloader  &none            &none              &none          &none
&kp SEMICOLON  &kp N4  &kp N5   &kp N6        &kp EQUAL   &none        &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
&kp GRAVE      &kp N1  &kp N2   &kp N3        &kp MINUS   &none        &none            &none              &none          &none
                       &kp DOT  &kp NUMBER_0  &kp MINUS   &trans       &trans           &trans
            >;
        };

        func_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &trans  &bootloader  &trans  &trans  &trans  &trans
&kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans       &trans  &trans  &trans  &trans
&kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans       &trans  &trans  &trans  &trans
                 &trans  &trans  &trans  &trans       &trans  &trans
            >;
        };
    };
};
